#!/usr/bin/perl -w
#
#	Proxy [flags]
#
#	Description:	Manage proxy service database.
#
#	Flags:
#		-v, --verbose
#			Do not be quiet.
#
#		-d, --daemon
#			Run as a daemon.
#
#		-<signal>
#		-s <signal>
#		--signal <signal>
#			Specify the signal to be sent. The signal can be specified by using name or number. 
#
#		-l, --list
#			List signal names.
#
use lib "$ENV{HOME}/perl5/lib/perl5";
use lib "$ENV{HOME}/scraper/lib";

use strict;
use warnings;

use Getopt::Long;
use Proxy;

sub usage {

	die "Usage: $0 [-d|--daemon] | [-v|--verbose] | <signal> | [-s|--signal] <signal> | [-l|--list]\n";
}

sub list {

	print "1) SIGHUP	 2) SIGINT	 9) SIGKILL	15) SIGTERM\n";

	exit(0);
}

my ( $verbose, $daemon, $job, $use_proxy, $use_target, $use_filter, $update, $signal, $list ) = ( '', '', '', '', '', '', '', '', '' );

my %sig	= ( hup => '', int => '', kill => '', term => '' );

GetOptions(
	"verbose|v"	=> \$verbose,
	"daemon|d"	=> \$daemon,
	"job|j=s"	=> \$job,
	"proxy|p"	=> \$use_proxy,
	"target|t=s"	=> \$use_target,
	"filter|f=s"	=> \$use_filter,
	"update|u"	=> \$update,
	"SIGHUP|1"	=> \$sig{hup},
	"SIGINT|2"	=> \$sig{int},
	"SIGKILL|9"	=> \$sig{kill},
	"SIGTERM|15"	=> \$sig{term},
	"signal|s=i"	=> \$signal,
	"list|l"	=> \$list,
)
or usage();

if ( $list ) { list(); }

my $proxy = Proxy->new( {

			proxy	=> $use_proxy,

			target	=> $use_target,

			filter	=> $use_filter,

			update	=> $update,
		}

	) or die "$0: Proxy->new() failed\n";

if ( $signal eq '1' || $signal eq '-SIGHUP' || $sig{hup} ) {

	$proxy->kill(qw(HUP));

	exit(0);
}

if ( $signal eq '2' || $signal eq '-SIGINT' || $sig{int} ) {

	$proxy->kill(qw(INT));

	exit(0);
}

if ( $signal eq '9' || $signal eq '-SIGKILL' || $sig{kill} ) {

	$proxy->kill(qw(KILL));

	exit(0);
}

if ( $signal eq '15' || $signal eq '-SIGTERM' || $sig{term} ) {

	$proxy->kill(qw(TERM));

	exit(0);
}

$proxy->verbose( $verbose );

if ( $job ) {

	$proxy->dispatch();

	$proxy->{dispatch}->schedule( $job );

	exit(0);
}

if ( $daemon ) {

	$proxy->daemonize();
}

exit(0);
